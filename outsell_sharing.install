<?php

/**
 * @file
 * Installation file for the outsell_sharing module.
 */

/**
 * Implements hook_uninstall().
 */
function outsell_sharing_uninstall() {

  // Remove outsell_sharing variables.
  variable_del('outsell_sharing_sender');
  variable_del('outsell_sharing_getter');
  variable_del('outsell_sharing_get_insights');
  variable_del('outsell_sharing_get_news');
  variable_del('outsell_sharing_get_reports');
  variable_del('outsell_sharing_sites');
  variable_del('outsell_sharing_send_editors');
  variable_del('outsell_sharing_send_community');
  variable_del('outsell_sharing_send_outsellinc');

}

/**
 * Implements hook_update().
 *
 * This update will "drain the swamp" eg remove cruft from our older
 * openid/tethys login implementation.
 */
function outsell_sharing_update_7002() {

  // Drush kill string.

  /*

  drush field-delete field_outsell_term_id

   */

  // SQL kill string.
  /*

  drop table field_data_field_categorie_regions; \
  drop table field_revision_field_categorie_regions; \
  drop table field_data_field_file; \
  drop table field_revision_field_file; \
  drop table field_data_field_guid; \
  drop table field_revision_field_guid; \
  drop table field_data_field_headline_topic; \
  drop table field_revision_field_headline_topic; \
  drop table field_data_field_implications; \
  drop table field_revision_field_implications; \
  drop table field_data_field_industry_segment; \
  drop table field_revision_field_industry_segment; \
  drop table field_data_field_keywords; \
  drop table field_revision_field_keywords; \
  drop table field_data_field_long_name; \
  drop table field_revision_field_long_name; \
  drop table field_data_field_news_image; \
  drop table field_revision_field_news_image; \
  drop table field_data_field_number_of_pages; \
  drop table field_revision_field_number_of_pages; \
  drop table field_data_field_outsell_opinion; \
  drop table field_revision_field_outsell_opinion; \
  drop table field_data_field_outsell_post_id; \
  drop table field_revision_field_outsell_post_id; \
  drop table field_data_field_outsell_term_id; \
  drop table field_revision_field_outsell_term_id; \
  drop table field_data_field_outsell_term_old_id; \
  drop table field_revision_field_outsell_term_old_id; \
  drop table field_data_field_peer_reviewer; \
  drop table field_revision_field_peer_reviewer; \
  drop table field_data_field_price; \
  drop table field_revision_field_price; \
  drop table field_data_field_priority; \
  drop table field_revision_field_priority; \
  drop table field_data_field_report_image; \
  drop table field_revision_field_report_image; \
  drop table field_data_field_report_type; \
  drop table field_revision_field_report_type; \
  drop table field_data_field_short_description; \
  drop table field_revision_field_short_description; \
  drop table field_data_field_source; \
  drop table field_revision_field_source; \
  drop table field_data_field_summary; \
  drop table field_revision_field_summary; \
  drop table field_data_field_toc; \
  drop table field_revision_field_toc;

   */

  // Batch purge older fields if they exist.
  $legacy_fields = array(
    'field_company',
    'field_categorie_regions',
    'field_file',
    'field_guid',
    'field_headline_topic',
    'field_implications',
    'field_industry_segment',
    'field_keywords',
    'field_long_name',
    'field_news_image',
    'field_number_of_pages',
    'field_outsell_opinion',
    'field_outsell_post_id',
    'field_outsell_term_id',
    'field_outsell_term_old_id',
    'field_peer_reviewer',
    'field_price',
    'field_priority',
    'field_report_image',
    'field_report_type',
    'field_short_description',
    'field_source',
    'field_summary',
    'field_toc',
    'flag',
    'flagging',
    'flag_counts',
    'flag_url'
  );

  // Queue up for destruction.
  foreach ($legacy_fields as $legacy_field) {
    if (field_info_field($legacy_field) !== NULL) {
      field_delete_field($legacy_field);
    }
  }

  // Destruct.
  field_purge_batch(1);

}

/**
 * Implements hook_update().
 *
 * Add legacy tlid_and_title table to map legacy tlid's for redirect logic.
 */
function outsell_sharing_update_7003() {
  db_query("
    CREATE TABLE `tlid_and_title` (
      `item_id` varchar(50) COLLATE utf8_bin NOT NULL COMMENT 'The primary identifier of the item',
      `classification_horizontal` bigint(20) DEFAULT NULL COMMENT 'The field''s value for this item',
      `classification_vertical` bigint(20) DEFAULT NULL COMMENT 'The field''s value for this item',
      `search_bundle` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT 'The field''s value for this item',
      `search_api_language` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT 'The field''s value for this item',
      `entity_d7entity_title` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT 'The field''s value for this item',
      `entity_d7entity_created` bigint(20) DEFAULT NULL COMMENT 'The field''s value for this item',
      `entity_d7entity_field_industry_segment_name` varchar(255) COLLATE utf8_bin DEFAULT NULL COMMENT 'The field''s value for this item',
      `entity_d7entity_company` bigint(20) DEFAULT NULL COMMENT 'The field''s value for this item',
      KEY `_classification_horizontal` (`classification_horizontal`),
      KEY `_classification_vertical` (`classification_vertical`),
      KEY `_search_bundle` (`search_bundle`(10)),
      KEY `_search_api_language` (`search_api_language`(10)),
      KEY `_entity_d7entity_title` (`entity_d7entity_title`(10)),
      KEY `_entity_d7entity_created` (`entity_d7entity_created`),
      KEY `_entity_d7entity_field_industry_segment_name` (`entity_d7entity_field_industry_segment_name`(10)),
      KEY `_entity_d7entity_company` (`entity_d7entity_company`)
    ) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
  ");
}

/**
 * Implements hook_update().
 *
 * Add legacy tlid_and_title data to the table.
 *
 * This is dependent on the file tlid_and_title.csv being present in the
 * private files directory.
 */
function outsell_sharing_update_7004() {
  $path = variable_get('file_private_path');
  if (file_exists("$path/tlid_and_title.csv")) {
    $file = file("$path/tlid_and_title.csv");
    foreach ($file as $f) {
      $fields = str_getcsv($f);
      $row = db_insert('tlid_and_title')
        ->fields(array(
          'item_id' => $fields[0],
          'search_bundle' => $fields[3],
          'entity_d7entity_title' => $fields[5],
        ))
        ->execute();
    }
  }
}
